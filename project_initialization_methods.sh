search_and_inject(){
  target_string="$1"
  text_to_inject="$2"
  target_file="$3"
  target_lines="`grep -n "$target_string" "$target_file" | cut -d: -f1`"
  for target_line in $target_lines; do
    sed -i "${target_line} i\
${text_to_inject}" "$target_file"
  done
}

search_and_replace(){
  target_string="$1"
  regexp_to_apply="$2"
  target_file="$3"
  target_lines="`grep -n "$target_string" "$target_file" | cut -d: -f1`"
  for target_line in $target_lines; do
    sed -i "${target_line}${regexp_to_apply}" "$target_file"
  done
}

project_application_name(){
  grep "app: " ./mix.exs | sed 's/^.*app: :\(.*\),$/\1/g'
}
project_module_name(){
  head -n 1 ./lib/*_web.ex | sed -e 's/^defmodule \(.*\)Web do$/\1/g'
}

generate_phoenix_project(){
    echo "Creating new phoenix project named “${APP_NAME}”..."

    if [ "$DB_NAME" == "" ]; then
      echo "y" | mix phx.new . --app "${APP_NAME}" --no-ecto --live &>/dev/null
    else
      echo "y" | mix phx.new . --app "${APP_NAME}" --live &>/dev/null
    fi

    # Let's be helpful, add examples for non-live projects too.
    echo "Scaffold non-live template files..."
    scaffold_non_live_phoenix_too

    echo "Linking config values to env variables..."
    hook_config_files_to_environment_variables

    hook_project_default_files_to_environment_variables

    hook_project_internationalization_to_environment_variables

    echo "Adding example key value storage agent..."
    inject_key_value_storage_agent

    echo "Adding release tweaks..."
    inject_release_tweaks

    echo "Adding bakeware tweaks..."
    inject_bakeware_tweaks

    echo "Adding common dependencies..."
    inject_extra_dependencies

    echo "Adding tailwind instead of standard CSS..."
    inject_tailwind
    apply_tailwind_classes

    echo "Adding tailwind generator..."
    write_tailwind_generator

    echo "Scaffold PWA required files..."
    scaffold_pwa_files

    echo "Applying changes to image files and folders..."
    changing_image_files_and_folders

    #echo "Fetching tailwind dependencies..."
    #(npm install --prefix assets --save-dev tailwindcss postcss postcss-loader postcss-import autoprefixer && cd assets && node node_modules/webpack/bin/webpack.js --mode development)
}

inject_release_tweaks(){
  search_and_replace \
    '^  url: \[' \
    's/^/  server: true,\n&/' \
    ./config/config.exs

  mv ./config/{prod.secret,releases}.exs

  sed -i 's/use Mix.Config/import Config/g' ./config/*.exs

  echo "`head -n -4 ./config/prod.exs`" >./config/prod.exs
  echo "`head -n -10 ./config/releases.exs | tail -n 14`" >>./config/prod.exs

  cat <<EOF >./lib/`project_application_name`/release.ex
defmodule `project_module_name`.Release do
  @application :`project_application_name`

  def migrate do
    load_app()

    for repo <- repos() do
      {:ok, _, _} = Ecto.Migrator.with_repo(repo, &Ecto.Migrator.run(&1, :up, all: true))
    end
  end

  def rollback(repo, version) do
    load_app()
    {:ok, _, _} = Ecto.Migrator.with_repo(repo, &Ecto.Migrator.run(&1, :down, to: version))
  end

  defp repos do
    Application.fetch_env!(@application, :ecto_repos)
  end

  defp load_app do
    Application.load(@application)
  end
end
EOF
}

inject_bakeware_tweaks(){
  search_and_inject '      deps: deps()' '\
      releases: [{:'`project_application_name`', release()}],\
      preferred_cli_env: [release: Mix.env()],' \
      ./mix.exs

  search_and_inject '{:plug_cowboy, "~> 2.0"}' '\
      {:bakeware, "~> 0.1.5"},' \
      ./mix.exs

  search_and_inject 'setup: \["deps.get", "cmd npm install --prefix assets"\]' '\
      assets: ["cmd npm run deploy --prefix assets"],\
      release: ["assets", "phx.digest", "release"],' \
      ./mix.exs

  search_and_inject '^end$' '\
\
  defp release do\
    [\
      overwrite: true,\
      cookie: System.get_env("ERLANG_COOKIE", "app"),\
      steps: [:assemble, &Bakeware.assemble/1],\
      strip_beams: Mix.env() == :prod\
    ]\
  end' \
  ./mix.exs
}

changing_image_files_and_folders(){
  # Such a strange decision to use “images” as default, when “img” is shorter.
  search_and_replace \
    'images' \
    's/images/img/' \
    ./lib/*_web/endpoint.ex

  search_and_replace \
    '/images/phoenix.png' \
    's;/images/phoenix.png;/img/phoenix.png;g' \
    ./lib/*_web/templates/layout/root.html.leex

  mv ./assets/static/{images,img}

  # Put new images in place
  echo '<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" width="300" height="300" viewBox="0 0 30.72 30.719719" preserveAspectRatio="xMidYMid" version="1.1" id="svg4" sodipodi:docname="phoenix-logo.svg" inkscape:version="0.92.5 (2060ec1f9f, 2020-04-08)" inkscape:export-filename="/home/quarkex/phoenix-logo.png" inkscape:export-xdpi="96" inkscape:export-ydpi="96"><metadata id="metadata10"><rdf:RDF><cc:Work rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage" /></cc:Work></rdf:RDF></metadata><defs id="defs8" /><sodipodi:namedview pagecolor="#ffffff" bordercolor="#666666" borderopacity="1" objecttolerance="10" gridtolerance="10" guidetolerance="10" inkscape:pageopacity="0" inkscape:pageshadow="2" inkscape:window-width="2736" inkscape:window-height="1654" id="namedview6" showgrid="false" inkscape:zoom="3.1246755" inkscape:cx="138.67576" inkscape:cy="145.71593" inkscape:window-x="0" inkscape:window-y="0" inkscape:window-maximized="1" inkscape:current-layer="svg4" /><g id="g4528" transform="matrix(0.09472541,0,0,0.09472541,4.5543466,7.8848498)"><circle style="fill:#fd4f00;fill-opacity:1;stroke-width:0.17328154" r="162.15289" cy="78.898254" cx="114.07343" id="path12" /><path style="fill:#ffffff" id="path2" d="m 96.135,122.038 c -1.128,-0.203 -1.57,-0.28 -2.012,-0.362 -14.288,-2.657 -23.32,-11.303 -27.6,-24.895 -2.668,-8.472 2.18,-14.711 11.066,-15.122 7.276,-0.337 12.256,3.845 16.66,8.711 5.677,6.274 10.881,12.973 16.457,19.341 8.028,9.167 17.487,15.07 30.429,13.248 11.605,-1.634 21.718,-6.291 30.518,-13.956 1.323,-1.152 2.774,-2.156 4.167,-3.229 l -0.878,-1.035 c -7.387,2.294 -14.921,3.065 -22.619,2.678 -11.648,-0.586 -22.747,-3.018 -32.678,-9.413 -9.062,-5.836 -15.745,-13.656 -18.922,-24.101 -2.566,-8.438 2.686,-14.341 11.43,-13.121 3.457,0.482 6.367,2.039 8.979,4.247 2.127,1.796 4.167,3.7 6.336,5.442 10.206,8.201 24.467,8.657 37.422,-0.247 C 143.592,70.127 129.102,58.412 116.375,43.565 111.394,37.754 106.531,31.839 101.447,26.12 91.61,15.053 80.697,5.303 65.754,1.977 46.666,-2.272 28.238,0.505 10.55,8.606 7.023,10.221 3.636,12.099 0,15.125 c 1.8,0 2.782,0.022 3.762,-0.003 8.918,-0.23 15.601,3.733 20.421,11.028 3.508,5.309 5.161,11.313 6.421,17.49 1.87,9.167 0.902,18.513 1.982,27.722 2.776,23.675 14.876,40.196 37.406,48.656 8.262,3.103 16.736,4.136 26.143,2.02 z M 39.196,14.041 c -3.56,0.898 -6.405,-0.539 -9.337,-3.506 5.021,-1.251 9.449,-1.736 14.207,-1.923 -0.389,3.089 -2.211,4.759 -4.87,5.429 z m 116.658,138.251 c -0.31,-2.279 -2.257,-3.283 -3.788,-4.475 -6.772,-5.271 -14.692,-7.137 -23.089,-7.292 -5.011,-0.092 -9.97,-0.466 -14.696,-2.223 -2.166,-0.805 -4.589,-1.839 -4.534,-4.638 0.055,-2.84 2.526,-3.643 4.775,-4.315 1.841,-0.55 3.741,-0.901 5.837,-1.391 -5.324,-3.412 -10.525,-3.885 -17.455,-1.098 -10.909,4.386 -21.664,3.866 -32.539,-0.061 -6.14,-2.216 -11.589,-5.695 -17.262,-8.776 l -0.155,0.107 0.147,-0.102 c -0.14,-0.428 -0.394,-0.439 -0.72,-0.2 l 0.445,0.39 c 4.705,7.711 11.061,13.915 18.241,19.217 13.828,10.21 28.932,16.299 46.605,13.597 a 243.203,243.203 0 0 1 17.216,-2.014 c 7.218,-0.583 14.095,1.448 20.972,3.274 z M 122.535,41.673 c -0.382,-0.277 -0.749,-0.972 -1.529,-0.253 6.358,8.6 14.526,14.94 24.361,18.931 15.873,6.441 31.983,7.543 48.46,1.859 12.792,-4.412 21.991,-0.101 26.768,12.319 0.691,-14.416 -7.79,-24.92 -21.299,-26.979 -7.6,-1.158 -14.617,1.363 -21.736,3.428 -19.811,5.744 -38.221,2.908 -55.025,-9.305 z m 98.737,56.228 c 2.582,0.217 5.162,0.451 7.743,0.677 -5.832,-5.123 -12.94,-5.529 -20.131,-5.12 -10.95,0.622 -18.839,6.937 -26.031,14.482 -6.337,6.65 -12.063,14.11 -21.52,16.782 0.158,0.284 0.199,0.426 0.243,0.426 1.272,0.019 2.547,0.079 3.816,0.021 13.735,-0.622 26.674,-3.519 36.967,-13.487 3.241,-3.139 6.142,-6.626 9.271,-9.884 2.61,-2.717 5.775,-4.223 9.642,-3.897 z M 189.365,80.879 c -10.25,0.896 -19.154,5.136 -27.517,10.727 -6.437,4.303 -13.321,6.339 -21.057,4.993 -1.361,-0.237 -2.732,-0.414 -4.098,-0.619 l -0.047,0.572 c 0.492,0.253 0.967,0.549 1.479,0.752 1.289,0.51 2.559,1.124 3.897,1.442 14.886,3.539 29.136,1.726 41.984,-6.573 8.098,-5.231 16.481,-6.222 25.567,-4.871 0.918,0.137 1.832,0.304 2.754,0.39 0.854,0.081 1.746,0.93 2.899,0.011 -7.943,-5.738 -16.499,-7.642 -25.861,-6.824 z M 152.731,46.086 c 5.377,0.186 10.73,-0.518 16.354,-3.859 -1.647,0.146 -2.346,0.143 -3.016,0.277 -7.748,1.544 -14.703,-0.146 -20.898,-5.044 -2.273,-1.798 -4.584,-3.548 -6.886,-5.309 -9.126,-6.98 -19.591,-9.315 -31.038,-9.117 0.185,0.563 0.196,0.949 0.395,1.149 12.455,12.598 26.87,21.275 45.089,21.903 z m 90.142,64.638 c -7.708,-7.645 -18.052,-8.63 -27.624,-1.958 6.336,0.285 11.092,2.306 14.949,6.3 1.365,1.413 2.78,2.8 4.307,4.032 5.832,4.704 15.719,4.93 21.495,0.566 -6.785,-2.648 -6.785,-2.648 -13.127,-8.94 z m -76.767,58.545 c -6.774,-12.609 -18.159,-15.454 -31.311,-14.608 3.888,1.078 7.519,2.737 10.851,5.063 3.061,2.137 5.637,4.783 8.176,7.493 5.031,5.369 12.883,8.664 18.086,7.55 -2.389,-1.506 -4.511,-3.096 -5.802,-5.498 z m 63.031,-70.431 c 0.002,-0.08 0.004,-0.161 0.009,-0.245 l -0.02,0.021 0.022,-0.024 -0.133,-0.012 c 0.026,0.024 0.054,0.043 0.08,0.067 z m -72.907,53.751 a 36.032,36.032 0 0 0 -0.267,-0.151 0.463,0.463 0 0 0 0.056,0.159 c 0.018,0.03 0.138,-0.004 0.211,-0.008 z m -0.267,-0.151 c -0.008,-0.041 -0.015,-0.083 -0.026,-0.124 l -0.031,0.038 0.031,-0.037 -0.083,-0.023 c 0.005,0.034 0.017,0.062 0.021,0.097 z" inkscape:connector-curvature="0" /></g></svg>' \
  >./assets/static/img/logo.svg

  echo "" \
  | base64 --decode >./assets/static/img/logo.png

  (cd ./assets/static/img/ && pwaiconize logo.png && faviconize logo.png && mv favicon.ico ../.)

  echo "" \
  | base64 --decode >./assets/static/img/og_image.png
}

hook_project_internationalization_to_environment_variables() {
  search_and_inject \
    "# Configures Elixir's Logger" '\
config :'`project_application_name`', '`project_module_name`'Web.Gettext,\
  locales: [System.get_env("LANGUAGE", "en")],\
  default_locale: System.get_env("LANGUAGE", "en")\
' ./config/config.exs
}

scaffold_non_live_phoenix_too(){
  search_and_inject '    live "/", PageLive, :index' '\
    #get "/", PageController, :index\
' ./lib/*_web/router.ex

  cat <<EOF >./lib/`project_application_name`_web/controllers/page_controller.ex
defmodule `project_module_name`Web.PageController do
  use `project_module_name`Web, :controller

  def index(conn, _params) do
    render(conn, "index.html")
  end
end
EOF
}

scaffold_pwa_files(){
  search_and_inject '<%= live_title_tag ' \
'\
    <meta name="apple-mobile-web-app-title" content="<%= assigns[:page_title] || System.get_env("TITLE") %>">\
\
    <meta property="og:title" content="<%= Application.get_env(:'`project_application_name`', '`project_module_name`'Web.Endpoint, "localhost")[:title] %>"/>\
    <meta property="og:description" content="<%= Application.get_env(:'`project_application_name`', '`project_module_name`'Web.Endpoint, "localhost")[:description] %>"/>\
    <meta property="og:image" content="<%= Routes.static_url('`project_module_name`'Web.Endpoint, "/img/og_image.png") %>"/>\
    <meta property="og:url" content="<%= Routes.static_url('`project_module_name`'Web.Endpoint, "/") %>"/>\
\
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>\
    <link rel="manifest" href="<%= Routes.static_url('`project_module_name`'Web.Endpoint, "/manifest.json") %>">\
\
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />\
    <link rel="apple-touch-icon" href="<%= Routes.static_url('`project_module_name`'Web.Endpoint, "/img/logo-152.png") %>">\
    <meta name="apple-mobile-web-app-capable" content="yes">\
    <meta name="msapplication-TileImage" content="<%= Routes.static_url('`project_module_name`'Web.Endpoint, "/img/logo-144.png") %>">\
\
    <meta name="theme-color" content="<%= "white" %>"/>\
    <meta name="apple-mobile-web-app-status-bar-style" content="<%= "default" %>">\
    <meta name="msapplication-TileColor" content="<%= "white" %>">\
\
' ./lib/*_web/templates/layout/root.html.leex

  search_and_inject 'scope "/", ' \
'\
  pipeline :json_file do\
    plug :accepts, ["json"]\
    plug :put_secure_browser_headers\
  end\
\
  scope "/assetlinks.json", '`project_module_name`'Web do\
    pipe_through :json_file\
\
    get "/", AssetLinksController, :index\
  end\
\
  scope "/.well-known/assetlinks.json", '`project_module_name`'Web do\
    pipe_through :json_file\
\
    get "/", AssetLinksController, :index\
  end\
\
  scope "/manifest.json", '`project_module_name`'Web do\
    pipe_through :json_file\
\
    get "/", ManifestController, :index\
  end\
' ./lib/*_web/router.ex

  # Add asset links files.
  cat <<EOF >./lib/`project_application_name`_web/controllers/asset_links_controller.ex
defmodule `project_module_name`Web.AssetLinksController do

  @application :`project_application_name`
  alias `project_module_name`Web, as: Web

  use Web, :controller

  def index(conn, _params) do
    {code, payload} = asset_links()
                      |> Jason.encode()
                      |> case do
                        {:ok, json} -> {200, json}
                        _ -> {500, ~w[{"status": "error"}]}
                      end
    conn
    |> put_resp_content_type("application/json")
    |> send_resp(code, payload)
  end

  defp asset_links() do
    ~w{
      relation
      target
      sha256_cert_fingerprints
    }a
    |> Enum.map(fn a -> {a, asset_links(a)} end)
    |> Map.new
  end

  defp asset_links(:target),
  do: %{
    namespace: asset_links(:apk_namespace, "android_app"),
    target: asset_links(:apk_package_name, "tld.domain.apk")
  }

  defp asset_links(:relation),
  do: :apk_relation
      |> asset_links("delegate_permission/common.handle_all_urls")
      |> String.split(",")

  defp asset_links(:sha256_cert_fingerprints),
  do: :apk_sha256_cert_fingerprints
      |> asset_links("00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00")
      |> String.split(",")

  defp asset_links(attribute, default_value),
  do: Application.get_env(@application, Web.Endpoint)[attribute] || default_value
end
EOF

  # Add manifest files.
  cat <<EOF >./lib/`project_application_name`_web/controllers/manifest_controller.ex
defmodule `project_module_name`Web.ManifestController do

  @application :`project_application_name`
  alias `project_module_name`Web, as: Web

  use Web, :controller

  def index(conn, _params) do
    {code, payload} = manifest()
                      |> Jason.encode()
                      |> case do
                        {:ok, json} -> {200, json}
                        _ -> {500, ~w[{"status": "error"}]}
                      end
    conn
    |> put_resp_content_type("application/json")
    |> send_resp(code, payload)
  end

  defp manifest() do
    ~w{
      name
      short_name
      icons
      lang
      start_url
      display
      background_color
      theme_color
    }a
    |> Enum.map(fn a -> {a, manifest(a)} end)
    |> Map.new
  end

  defp manifest(:name),
  do: manifest(:name, :title, manifest(:domain))

  defp manifest(:short_name),
  do: manifest(:name)

  defp manifest(:start_url),
  do: "https://" <> manifest(:domain)

  defp manifest(:display),
  do: manifest(:display, "standalone")

  defp manifest(:background_color),
  do: manifest(:background_color, "white")

  defp manifest(:theme_color),
  do: manifest(:theme_color, "white")

  defp manifest(:icons) do
    icons = Application.get_env(@application, Web.Endpoint)[:icons] || ~w{ 512 256 384 192 152 144 128 96 72 48 }
    cond do
      is_list(icons) && Enum.any?(icons, &is_map/1) ->
        icons
      true ->
        Enum.map(icons, fn s ->
          %{
            src: "img/logo-#{s}.png",
            sizes: "#{s}x#{s}",
            type: "image/png"
          }
        end) ++ [
          %{
            src: "img/logo.svg",
            sizes: icons
                   |> Enum.map(fn s -> "#{s}x#{s}" end)
                   |> Enum.join(" "),
            purpose: "maskable any",
            type: "image/svg"
          }
        ]
    end
  end

  defp manifest(:lang),
  do: Application.get_env(@application, Web.Gettext)[:default_locale] || "en"

  defp manifest(:domain),
  do: Application.get_env(@application, Web.Endpoint)[:url][:host] || "localhost"

  defp manifest(attribute, default),
  do: Application.get_env(@application, Web.Endpoint)[attribute] || default

  defp manifest(_name, attribute, default),
  do: Application.get_env(@application, Web.Endpoint)[attribute] || default

end
EOF

  # Add a service worker file ready to install itself.
  cat <<EOF >>./assets/js/app.js

if('serviceWorker' in navigator) {
  navigator.serviceWorker.register('/sw.js');
}
EOF

  search_and_replace \
    'disable any cache and ' \
    's;disable any cache and ;;' \
    ./config/dev.exs

  search_and_replace \
    '  check_origin: false,' \
    's;  check_origin: false,;&\n  cache_static_manifest: "priv/static/cache_manifest.json",;' \
    ./config/dev.exs

  search_and_replace \
    'robots.txt' \
    's/robots.txt/& cache_manifest.json sw.js/' \
    ./lib/*_web/endpoint.ex

  cat <<EOF >./assets/static/sw.js
// during the install phase you usually want to cache static assets
self.addEventListener('install', function(e) {
  // once the SW is installed, go ahead and cache the resources
  e.waitUntil(
    fetch('/cache_manifest.json')
      .then(function(response) {
        return response.json()
      })
      .then(function(cacheManifest) {
        var cacheName = 'cache:static:' + cacheManifest.version
        var all = Object.values(cacheManifest.latest).filter(
          function(fn) { return fn.match(/^(images|css|js|fonts)/);
          })
        caches.open(cacheName).then(function(cache) {
          return cache.addAll(all).then(function() {
            self.skipWaiting();
          });
        })
      })
  );
});

// when the browser fetches a url
self.addEventListener('fetch', function(event) {
  // either respond with the cached object fetch it
  event.respondWith(
    caches.match(event.request).then(function(response) {
      if (response) {
        // retrieve from cache
        return response;
      }
      // fetch as normal
      return fetch(event.request);
    })
  );
});
EOF
}

hook_project_default_files_to_environment_variables(){
    sed -i \
      -e 's;lang="[^"]*";lang="<%= System.get_env("LANGUAGE") || "en" %>";g' \
      -e 's;live_title_tag assigns\[:page_title\] || "[^"]*",;live_title_tag (assigns[:page_title] || System.get_env("TITLE", "")),;g' \
      -e 's;  </head>;    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.8.0/dist/alpine.min.js" defer></script>\n  </head>;g' \
      -e 's;  </body>;    <script src="https://cdn.jsdelivr.net/npm/@ryangjchandler/spruce@2.x.x/dist/spruce.umd.js"></script>\n  </body>;g' \
        ./lib/*_web/templates/layout/root.html.leex
}

apply_tailwind_classes(){
  # Add a SEO mobile friendly tweak that can be overrriden.
  search_and_inject \
    'LiveView specific classes for your customizations'  '\
\
/* SEO tweak to make links touch-friendly */\
a {\
  display: inline-block;\
  min-width: 48px;\
  min-height: 48px;\
}\
' ./assets/css/app.css

  # We will use flexbox to arrange the elements,
  # but phoenix adds an iframe for its liveview functionality.
  # Let's make sure that it remains hidden.
  search_and_replace \
    'LiveView specific classes for your customizations' \
    's~$~\nbody > iframe[src="/phoenix/live_reload/frame"] {\n  height:0;\n  width:0;\n}~' \
    ./assets/css/app.css

  search_and_replace \
    'LiveView specific classes for your customizations' \
    's~$~\n.body-wrapper, .body-wrapper > *[data-phx-view] {\n  display: flex;\n  flex:1;\n}~' \
    ./assets/css/app.css

  # The html has to fill the viewport for flex to be computed properly
  search_and_replace \
    '<html ' \
    's/html /html class="flex w-screen h-screen"/' \
    ./lib/*_web/templates/layout/root.html.leex

  # Now the body can just fill the html area.
  # Let's keep the column arrangements, as the devs expect this
  # to be the default flow of things.
  search_and_replace \
    '<body' \
    's/body/body class="flex flex-col flex-1"/' \
    ./lib/*_web/templates/layout/root.html.leex

  # Let's wrap the main content to apply the previous css modifications.
  search_and_replace \
    '    <%= @inner_content %>' \
    's;<;<div class="body-wrapper"><;' \
    ./lib/*_web/templates/layout/root.html.leex

  search_and_replace \
    '@inner_content %>' \
    's;$;</div>;' \
    ./lib/*_web/templates/layout/root.html.leex

  # We will inject a file to import other components, and build from there.
  search_and_replace \
    '@import "tailwindcss/components";' \
    's~$~\n@import "./components.css";~' \
    ./assets/css/app.css

  # Then we build our custom compoments index file, and each component inside a
  # dedicated folder.
  cat <<EOF >./assets/css/components.css
@import "./components/fonts.css";
EOF

  mkdir "./assets/css/components"

  cat <<EOF >./assets/css/components/fonts.css
h1 {
  @apply text-6xl;
}
h2 {
  @apply text-5xl;
}
h3 {
  @apply text-4xl;
}
h4 {
  @apply text-3xl;
}
h5 {
  @apply text-2xl;
}
h6 {
  @apply text-xl;
}

p {
  @apply text-base;
}
EOF

  # Now these are just aestetics elements to avoid a broken first impression,
  # and to provide some exapmles to use tailwind.
  search_and_replace \
    '        <nav role="navigation">' \
    's/nav /nav class="text-right px-6"/g' \
    ./lib/*_web/templates/layout/root.html.leex

  search_and_replace \
    '      <section class="container">' \
    's/container/container mx-auto flex flex-row-reverse p-6 justify-around text-center/g' \
    ./lib/*_web/templates/layout/root.html.leex


  # These two files are aidentical in function and structure when first
  # scaffolding a phoenix app with liveview enabled.
  for file in app.html.eex live.html.leex; do
    search_and_replace \
      '<main role="main" class="container">' \
      's/container/container mx-auto flex flex-col/g' \
      ./lib/*_web/templates/layout/$file
  done

  search_and_replace \
    '<section class="phx-hero">' \
    's/phx-hero/flex flex-col flex-1 py-12 justify-around text-center/g' \
    ./lib/*_web/live/page_live.html.leex

  search_and_replace \
    '<section class="row">' \
    's/row/container mx-auto flex/g' \
    ./lib/*_web/live/page_live.html.leex

  search_and_replace \
    '<article class="column">' \
    's/column/container mx-auto flex flex-col flex-1 items-center/g' \
    ./lib/*_web/live/page_live.html.leex
}

write_tailwind_generator(){
  mkdir -p ./lib/tailwind/mix/tasks/ &&

  echo "" \
  | base64 --decode >./lib/tailwind/mix/tasks/tailwind.gen.html.ex

  mkdir -p ./priv/templates/tailwind.gen.html

  echo "ZGVmbW9kdWxlIDwlPSBpbnNwZWN0IGNvbnRleHQud2ViX21vZHVsZSAlPi48JT0gaW5zcGVjdCBNb2R1bGUuY29uY2F0KHNjaGVtYS53ZWJfbmFtZXNwYWNlLCBzY2hlbWEuYWxpYXMpICU+Q29udHJvbGxlciBkbwogIHVzZSA8JT0gaW5zcGVjdCBjb250ZXh0LndlYl9tb2R1bGUgJT4sIDpjb250cm9sbGVyCgogIGFsaWFzIDwlPSBpbnNwZWN0IGNvbnRleHQubW9kdWxlICU+CiAgYWxpYXMgPCU9IGluc3BlY3Qgc2NoZW1hLm1vZHVsZSAlPgoKICBkZWYgaW5kZXgoY29ubiwgX3BhcmFtcykgZG8KICAgIDwlPSBzY2hlbWEucGx1cmFsICU+ID0gPCU9IGluc3BlY3QgY29udGV4dC5hbGlhcyAlPi5saXN0XzwlPSBzY2hlbWEucGx1cmFsICU+KCkKICAgIHJlbmRlcihjb25uLCAiaW5kZXguaHRtbCIsIDwlPSBzY2hlbWEucGx1cmFsICU+OiA8JT0gc2NoZW1hLnBsdXJhbCAlPikKICBlbmQKCiAgZGVmIG5ldyhjb25uLCBfcGFyYW1zKSBkbwogICAgY2hhbmdlc2V0ID0gPCU9IGluc3BlY3QgY29udGV4dC5hbGlhcyAlPi5jaGFuZ2VfPCU9IHNjaGVtYS5zaW5ndWxhciAlPiglPCU9IGluc3BlY3Qgc2NoZW1hLmFsaWFzICU+e30pCiAgICByZW5kZXIoY29ubiwgIm5ldy5odG1sIiwgY2hhbmdlc2V0OiBjaGFuZ2VzZXQpCiAgZW5kCgogIGRlZiBjcmVhdGUoY29ubiwgJXs8JT0gaW5zcGVjdCBzY2hlbWEuc2luZ3VsYXIgJT4gPT4gPCU9IHNjaGVtYS5zaW5ndWxhciAlPl9wYXJhbXN9KSBkbwogICAgY2FzZSA8JT0gaW5zcGVjdCBjb250ZXh0LmFsaWFzICU+LmNyZWF0ZV88JT0gc2NoZW1hLnNpbmd1bGFyICU+KDwlPSBzY2hlbWEuc2luZ3VsYXIgJT5fcGFyYW1zKSBkbwogICAgICB7Om9rLCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+fSAtPgogICAgICAgIGNvbm4KICAgICAgICB8PiBwdXRfZmxhc2goOmluZm8sICI8JT0gc2NoZW1hLmh1bWFuX3Npbmd1bGFyICU+IGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIpCiAgICAgICAgfD4gcmVkaXJlY3QodG86IFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKGNvbm4sIDpzaG93LCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSkKCiAgICAgIHs6ZXJyb3IsICVFY3RvLkNoYW5nZXNldHt9ID0gY2hhbmdlc2V0fSAtPgogICAgICAgIHJlbmRlcihjb25uLCAibmV3Lmh0bWwiLCBjaGFuZ2VzZXQ6IGNoYW5nZXNldCkKICAgIGVuZAogIGVuZAoKICBkZWYgc2hvdyhjb25uLCAleyJpZCIgPT4gaWR9KSBkbwogICAgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiA9IDwlPSBpbnNwZWN0IGNvbnRleHQuYWxpYXMgJT4uZ2V0XzwlPSBzY2hlbWEuc2luZ3VsYXIgJT4hKGlkKQogICAgcmVuZGVyKGNvbm4sICJzaG93Lmh0bWwiLCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+OiA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KQogIGVuZAoKICBkZWYgZWRpdChjb25uLCAleyJpZCIgPT4gaWR9KSBkbwogICAgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiA9IDwlPSBpbnNwZWN0IGNvbnRleHQuYWxpYXMgJT4uZ2V0XzwlPSBzY2hlbWEuc2luZ3VsYXIgJT4hKGlkKQogICAgY2hhbmdlc2V0ID0gPCU9IGluc3BlY3QgY29udGV4dC5hbGlhcyAlPi5jaGFuZ2VfPCU9IHNjaGVtYS5zaW5ndWxhciAlPig8JT0gc2NoZW1hLnNpbmd1bGFyICU+KQogICAgcmVuZGVyKGNvbm4sICJlZGl0Lmh0bWwiLCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+OiA8JT0gc2NoZW1hLnNpbmd1bGFyICU+LCBjaGFuZ2VzZXQ6IGNoYW5nZXNldCkKICBlbmQKCiAgZGVmIHVwZGF0ZShjb25uLCAleyJpZCIgPT4gaWQsIDwlPSBpbnNwZWN0IHNjaGVtYS5zaW5ndWxhciAlPiA9PiA8JT0gc2NoZW1hLnNpbmd1bGFyICU+X3BhcmFtc30pIGRvCiAgICA8JT0gc2NoZW1hLnNpbmd1bGFyICU+ID0gPCU9IGluc3BlY3QgY29udGV4dC5hbGlhcyAlPi5nZXRfPCU9IHNjaGVtYS5zaW5ndWxhciAlPiEoaWQpCgogICAgY2FzZSA8JT0gaW5zcGVjdCBjb250ZXh0LmFsaWFzICU+LnVwZGF0ZV88JT0gc2NoZW1hLnNpbmd1bGFyICU+KDwlPSBzY2hlbWEuc2luZ3VsYXIgJT4sIDwlPSBzY2hlbWEuc2luZ3VsYXIgJT5fcGFyYW1zKSBkbwogICAgICB7Om9rLCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+fSAtPgogICAgICAgIGNvbm4KICAgICAgICB8PiBwdXRfZmxhc2goOmluZm8sICI8JT0gc2NoZW1hLmh1bWFuX3Npbmd1bGFyICU+IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5LiIpCiAgICAgICAgfD4gcmVkaXJlY3QodG86IFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKGNvbm4sIDpzaG93LCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSkKCiAgICAgIHs6ZXJyb3IsICVFY3RvLkNoYW5nZXNldHt9ID0gY2hhbmdlc2V0fSAtPgogICAgICAgIHJlbmRlcihjb25uLCAiZWRpdC5odG1sIiwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPjogPCU9IHNjaGVtYS5zaW5ndWxhciAlPiwgY2hhbmdlc2V0OiBjaGFuZ2VzZXQpCiAgICBlbmQKICBlbmQKCiAgZGVmIGRlbGV0ZShjb25uLCAleyJpZCIgPT4gaWR9KSBkbwogICAgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiA9IDwlPSBpbnNwZWN0IGNvbnRleHQuYWxpYXMgJT4uZ2V0XzwlPSBzY2hlbWEuc2luZ3VsYXIgJT4hKGlkKQogICAgezpvaywgXzwlPSBzY2hlbWEuc2luZ3VsYXIgJT59ID0gPCU9IGluc3BlY3QgY29udGV4dC5hbGlhcyAlPi5kZWxldGVfPCU9IHNjaGVtYS5zaW5ndWxhciAlPig8JT0gc2NoZW1hLnNpbmd1bGFyICU+KQoKICAgIGNvbm4KICAgIHw+IHB1dF9mbGFzaCg6aW5mbywgIjwlPSBzY2hlbWEuaHVtYW5fc2luZ3VsYXIgJT4gZGVsZXRlZCBzdWNjZXNzZnVsbHkuIikKICAgIHw+IHJlZGlyZWN0KHRvOiBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6aW5kZXgpKQogIGVuZAplbmQK" \
  | base64 --decode >./priv/templates/tailwind.gen.html/controller.ex

  echo "ZGVmbW9kdWxlIDwlPSBpbnNwZWN0IGNvbnRleHQud2ViX21vZHVsZSAlPi48JT0gaW5zcGVjdCBNb2R1bGUuY29uY2F0KHNjaGVtYS53ZWJfbmFtZXNwYWNlLCBzY2hlbWEuYWxpYXMpICU+Q29udHJvbGxlclRlc3QgZG8KICB1c2UgPCU9IGluc3BlY3QgY29udGV4dC53ZWJfbW9kdWxlICU+LkNvbm5DYXNlCgogIGFsaWFzIDwlPSBpbnNwZWN0IGNvbnRleHQubW9kdWxlICU+CgogIEBjcmVhdGVfYXR0cnMgPCU9IGluc3BlY3Qgc2NoZW1hLnBhcmFtcy5jcmVhdGUgJT4KICBAdXBkYXRlX2F0dHJzIDwlPSBpbnNwZWN0IHNjaGVtYS5wYXJhbXMudXBkYXRlICU+CiAgQGludmFsaWRfYXR0cnMgPCU9IGluc3BlY3QgZm9yIHtrZXksIF99IDwtIHNjaGVtYS5wYXJhbXMuY3JlYXRlLCBpbnRvOiAle30sIGRvOiB7a2V5LCBuaWx9ICU+CgogIGRlZiBmaXh0dXJlKDo8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSBkbwogICAgezpvaywgPCU9IHNjaGVtYS5zaW5ndWxhciAlPn0gPSA8JT0gaW5zcGVjdCBjb250ZXh0LmFsaWFzICU+LmNyZWF0ZV88JT0gc2NoZW1hLnNpbmd1bGFyICU+KEBjcmVhdGVfYXR0cnMpCiAgICA8JT0gc2NoZW1hLnNpbmd1bGFyICU+CiAgZW5kCgogIGRlc2NyaWJlICJpbmRleCIgZG8KICAgIHRlc3QgImxpc3RzIGFsbCA8JT0gc2NoZW1hLnBsdXJhbCAlPiIsICV7Y29ubjogY29ubn0gZG8KICAgICAgY29ubiA9IGdldChjb25uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6aW5kZXgpKQogICAgICBhc3NlcnQgaHRtbF9yZXNwb25zZShjb25uLCAyMDApID1+ICJMaXN0aW5nIDwlPSBzY2hlbWEuaHVtYW5fcGx1cmFsICU+IgogICAgZW5kCiAgZW5kCgogIGRlc2NyaWJlICJuZXcgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiIgZG8KICAgIHRlc3QgInJlbmRlcnMgZm9ybSIsICV7Y29ubjogY29ubn0gZG8KICAgICAgY29ubiA9IGdldChjb25uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6bmV3KSkKICAgICAgYXNzZXJ0IGh0bWxfcmVzcG9uc2UoY29ubiwgMjAwKSA9fiAiTmV3IDwlPSBzY2hlbWEuaHVtYW5fc2luZ3VsYXIgJT4iCiAgICBlbmQKICBlbmQKCiAgZGVzY3JpYmUgImNyZWF0ZSA8JT0gc2NoZW1hLnNpbmd1bGFyICU+IiBkbwogICAgdGVzdCAicmVkaXJlY3RzIHRvIHNob3cgd2hlbiBkYXRhIGlzIHZhbGlkIiwgJXtjb25uOiBjb25ufSBkbwogICAgICBjb25uID0gcG9zdChjb25uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6Y3JlYXRlKSwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPjogQGNyZWF0ZV9hdHRycykKCiAgICAgIGFzc2VydCAle2lkOiBpZH0gPSByZWRpcmVjdGVkX3BhcmFtcyhjb25uKQogICAgICBhc3NlcnQgcmVkaXJlY3RlZF90byhjb25uKSA9PSBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6c2hvdywgaWQpCgogICAgICBjb25uID0gZ2V0KGNvbm4sIFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKGNvbm4sIDpzaG93LCBpZCkpCiAgICAgIGFzc2VydCBodG1sX3Jlc3BvbnNlKGNvbm4sIDIwMCkgPX4gIlNob3cgPCU9IHNjaGVtYS5odW1hbl9zaW5ndWxhciAlPiIKICAgIGVuZAoKICAgIHRlc3QgInJlbmRlcnMgZXJyb3JzIHdoZW4gZGF0YSBpcyBpbnZhbGlkIiwgJXtjb25uOiBjb25ufSBkbwogICAgICBjb25uID0gcG9zdChjb25uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6Y3JlYXRlKSwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPjogQGludmFsaWRfYXR0cnMpCiAgICAgIGFzc2VydCBodG1sX3Jlc3BvbnNlKGNvbm4sIDIwMCkgPX4gIk5ldyA8JT0gc2NoZW1hLmh1bWFuX3Npbmd1bGFyICU+IgogICAgZW5kCiAgZW5kCgogIGRlc2NyaWJlICJlZGl0IDwlPSBzY2hlbWEuc2luZ3VsYXIgJT4iIGRvCiAgICBzZXR1cCBbOmNyZWF0ZV88JT0gc2NoZW1hLnNpbmd1bGFyICU+XQoKICAgIHRlc3QgInJlbmRlcnMgZm9ybSBmb3IgZWRpdGluZyBjaG9zZW4gPCU9IHNjaGVtYS5zaW5ndWxhciAlPiIsICV7Y29ubjogY29ubiwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPjogPCU9IHNjaGVtYS5zaW5ndWxhciAlPn0gZG8KICAgICAgY29ubiA9IGdldChjb25uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6ZWRpdCwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPikpCiAgICAgIGFzc2VydCBodG1sX3Jlc3BvbnNlKGNvbm4sIDIwMCkgPX4gIkVkaXQgPCU9IHNjaGVtYS5odW1hbl9zaW5ndWxhciAlPiIKICAgIGVuZAogIGVuZAoKICBkZXNjcmliZSAidXBkYXRlIDwlPSBzY2hlbWEuc2luZ3VsYXIgJT4iIGRvCiAgICBzZXR1cCBbOmNyZWF0ZV88JT0gc2NoZW1hLnNpbmd1bGFyICU+XQoKICAgIHRlc3QgInJlZGlyZWN0cyB3aGVuIGRhdGEgaXMgdmFsaWQiLCAle2Nvbm46IGNvbm4sIDwlPSBzY2hlbWEuc2luZ3VsYXIgJT46IDwlPSBzY2hlbWEuc2luZ3VsYXIgJT59IGRvCiAgICAgIGNvbm4gPSBwdXQoY29ubiwgUm91dGVzLjwlPSBzY2hlbWEucm91dGVfaGVscGVyICU+X3BhdGgoY29ubiwgOnVwZGF0ZSwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiksIDwlPSBzY2hlbWEuc2luZ3VsYXIgJT46IEB1cGRhdGVfYXR0cnMpCiAgICAgIGFzc2VydCByZWRpcmVjdGVkX3RvKGNvbm4pID09IFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKGNvbm4sIDpzaG93LCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KQoKICAgICAgY29ubiA9IGdldChjb25uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6c2hvdywgPCU9IHNjaGVtYS5zaW5ndWxhciAlPikpPCU9IGlmIHNjaGVtYS5zdHJpbmdfYXR0ciBkbyAlPgogICAgICBhc3NlcnQgaHRtbF9yZXNwb25zZShjb25uLCAyMDApID1+IDwlPSBpbnNwZWN0IE1peC5QaG9lbml4LlNjaGVtYS5kZWZhdWx0X3BhcmFtKHNjaGVtYSwgOnVwZGF0ZSkgJT48JSBlbHNlICU+CiAgICAgIGFzc2VydCBodG1sX3Jlc3BvbnNlKGNvbm4sIDIwMCk8JSBlbmQgJT4KICAgIGVuZAoKICAgIHRlc3QgInJlbmRlcnMgZXJyb3JzIHdoZW4gZGF0YSBpcyBpbnZhbGlkIiwgJXtjb25uOiBjb25uLCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+OiA8JT0gc2NoZW1hLnNpbmd1bGFyICU+fSBkbwogICAgICBjb25uID0gcHV0KGNvbm4sIFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKGNvbm4sIDp1cGRhdGUsIDwlPSBzY2hlbWEuc2luZ3VsYXIgJT4pLCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+OiBAaW52YWxpZF9hdHRycykKICAgICAgYXNzZXJ0IGh0bWxfcmVzcG9uc2UoY29ubiwgMjAwKSA9fiAiRWRpdCA8JT0gc2NoZW1hLmh1bWFuX3Npbmd1bGFyICU+IgogICAgZW5kCiAgZW5kCgogIGRlc2NyaWJlICJkZWxldGUgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiIgZG8KICAgIHNldHVwIFs6Y3JlYXRlXzwlPSBzY2hlbWEuc2luZ3VsYXIgJT5dCgogICAgdGVzdCAiZGVsZXRlcyBjaG9zZW4gPCU9IHNjaGVtYS5zaW5ndWxhciAlPiIsICV7Y29ubjogY29ubiwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPjogPCU9IHNjaGVtYS5zaW5ndWxhciAlPn0gZG8KICAgICAgY29ubiA9IGRlbGV0ZShjb25uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChjb25uLCA6ZGVsZXRlLCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSkKICAgICAgYXNzZXJ0IHJlZGlyZWN0ZWRfdG8oY29ubikgPT0gUm91dGVzLjwlPSBzY2hlbWEucm91dGVfaGVscGVyICU+X3BhdGgoY29ubiwgOmluZGV4KQogICAgICBhc3NlcnRfZXJyb3Jfc2VudCA0MDQsIGZuIC0+CiAgICAgICAgZ2V0KGNvbm4sIFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKGNvbm4sIDpzaG93LCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSkKICAgICAgZW5kCiAgICBlbmQKICBlbmQKCiAgZGVmcCBjcmVhdGVfPCU9IHNjaGVtYS5zaW5ndWxhciAlPihfKSBkbwogICAgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiA9IGZpeHR1cmUoOjwlPSBzY2hlbWEuc2luZ3VsYXIgJT4pCiAgICAlezwlPSBzY2hlbWEuc2luZ3VsYXIgJT46IDwlPSBzY2hlbWEuc2luZ3VsYXIgJT59CiAgZW5kCmVuZAo=" \
  | base64 --decode >./priv/templates/tailwind.gen.html/controller_test.exs

  echo "PGgxPkVkaXQgPCU9IHNjaGVtYS5odW1hbl9zaW5ndWxhciAlPjwvaDE+Cgo8JSU9IHJlbmRlciAiZm9ybS5odG1sIiwgTWFwLnB1dChhc3NpZ25zLCA6YWN0aW9uLCBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChAY29ubiwgOnVwZGF0ZSwgQDwlPSBzY2hlbWEuc2luZ3VsYXIgJT4pKSAlPgoKPHNwYW4+PCUlPSBsaW5rICJCYWNrIiwgdG86IFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKEBjb25uLCA6aW5kZXgpICU+PC9zcGFuPgo=" \
  | base64 --decode >./priv/templates/tailwind.gen.html/edit.html.eex

  echo "PCUlPSBmb3JtX2ZvciBAY2hhbmdlc2V0LCBAYWN0aW9uLCBmbiBmIC0+ICU+CiAgPCUlPSBpZiBAY2hhbmdlc2V0LmFjdGlvbiBkbyAlPgogICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIj4KICAgICAgPHA+T29wcywgc29tZXRoaW5nIHdlbnQgd3JvbmchIFBsZWFzZSBjaGVjayB0aGUgZXJyb3JzIGJlbG93LjwvcD4KICAgIDwvZGl2PgogIDwlJSBlbmQgJT4KPCU9IGZvciB7bGFiZWwsIGlucHV0LCBlcnJvcn0gPC0gaW5wdXRzLCBpbnB1dCBkbyAlPgogIDwlPSBsYWJlbCAlPgogIDwlPSBpbnB1dCAlPgogIDwlPSBlcnJvciAlPgo8JSBlbmQgJT4KICA8ZGl2PgogICAgPCUlPSBzdWJtaXQgIlNhdmUiICU+CiAgPC9kaXY+CjwlJSBlbmQgJT4K" \
  | base64 --decode >./priv/templates/tailwind.gen.html/form.html.eex

  echo "PGgxPkxpc3RpbmcgPCU9IHNjaGVtYS5odW1hbl9wbHVyYWwgJT48L2gxPgoKPHRhYmxlPgogIDx0aGVhZD4KICAgIDx0cj4KPCU9IGZvciB7aywgX30gPC0gc2NoZW1hLmF0dHJzIGRvICU+ICAgICAgPHRoPjwlPSBQaG9lbml4Lk5hbWluZy5odW1hbml6ZShBdG9tLnRvX3N0cmluZyhrKSkgJT48L3RoPgo8JSBlbmQgJT4KICAgICAgPHRoPjwvdGg+CiAgICA8L3RyPgogIDwvdGhlYWQ+CiAgPHRib2R5Pgo8JSU9IGZvciA8JT0gc2NoZW1hLnNpbmd1bGFyICU+IDwtIEA8JT0gc2NoZW1hLnBsdXJhbCAlPiBkbyAlPgogICAgPHRyPgo8JT0gZm9yIHtrLCBffSA8LSBzY2hlbWEuYXR0cnMgZG8gJT4gICAgICA8dGQ+PCUlPSA8JT0gc2NoZW1hLnNpbmd1bGFyICU+LjwlPSBrICU+ICU+PC90ZD4KPCUgZW5kICU+CiAgICAgIDx0ZD4KICAgICAgICA8c3Bhbj48JSU9IGxpbmsgIlNob3ciLCB0bzogUm91dGVzLjwlPSBzY2hlbWEucm91dGVfaGVscGVyICU+X3BhdGgoQGNvbm4sIDpzaG93LCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSAlPjwvc3Bhbj4KICAgICAgICA8c3Bhbj48JSU9IGxpbmsgIkVkaXQiLCB0bzogUm91dGVzLjwlPSBzY2hlbWEucm91dGVfaGVscGVyICU+X3BhdGgoQGNvbm4sIDplZGl0LCA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSAlPjwvc3Bhbj4KICAgICAgICA8c3Bhbj48JSU9IGxpbmsgIkRlbGV0ZSIsIHRvOiBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChAY29ubiwgOmRlbGV0ZSwgPCU9IHNjaGVtYS5zaW5ndWxhciAlPiksIG1ldGhvZDogOmRlbGV0ZSwgZGF0YTogW2NvbmZpcm06ICJBcmUgeW91IHN1cmU/Il0gJT48L3NwYW4+CiAgICAgIDwvdGQ+CiAgICA8L3RyPgo8JSUgZW5kICU+CiAgPC90Ym9keT4KPC90YWJsZT4KCjxzcGFuPjwlJT0gbGluayAiTmV3IDwlPSBzY2hlbWEuaHVtYW5fc2luZ3VsYXIgJT4iLCB0bzogUm91dGVzLjwlPSBzY2hlbWEucm91dGVfaGVscGVyICU+X3BhdGgoQGNvbm4sIDpuZXcpICU+PC9zcGFuPgo=" \
  | base64 --decode >./priv/templates/tailwind.gen.html/index.html.eex

  echo "PGgxPk5ldyA8JT0gc2NoZW1hLmh1bWFuX3Npbmd1bGFyICU+PC9oMT4KCjwlJT0gcmVuZGVyICJmb3JtLmh0bWwiLCBNYXAucHV0KGFzc2lnbnMsIDphY3Rpb24sIFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKEBjb25uLCA6Y3JlYXRlKSkgJT4KCjxzcGFuPjwlJT0gbGluayAiQmFjayIsIHRvOiBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChAY29ubiwgOmluZGV4KSAlPjwvc3Bhbj4K" \
  | base64 --decode >./priv/templates/tailwind.gen.html/new.html.eex

  echo "PGgxPlNob3cgPCU9IHNjaGVtYS5odW1hbl9zaW5ndWxhciAlPjwvaDE+Cgo8dWw+CjwlPSBmb3Ige2ssIF99IDwtIHNjaGVtYS5hdHRycyBkbyAlPgogIDxsaT4KICAgIDxzdHJvbmc+PCU9IFBob2VuaXguTmFtaW5nLmh1bWFuaXplKEF0b20udG9fc3RyaW5nKGspKSAlPjo8L3N0cm9uZz4KICAgIDwlJT0gQDwlPSBzY2hlbWEuc2luZ3VsYXIgJT4uPCU9IGsgJT4gJT4KICA8L2xpPgo8JSBlbmQgJT4KPC91bD4KCjxzcGFuPjwlJT0gbGluayAiRWRpdCIsIHRvOiBSb3V0ZXMuPCU9IHNjaGVtYS5yb3V0ZV9oZWxwZXIgJT5fcGF0aChAY29ubiwgOmVkaXQsIEA8JT0gc2NoZW1hLnNpbmd1bGFyICU+KSAlPjwvc3Bhbj4KPHNwYW4+PCUlPSBsaW5rICJCYWNrIiwgdG86IFJvdXRlcy48JT0gc2NoZW1hLnJvdXRlX2hlbHBlciAlPl9wYXRoKEBjb25uLCA6aW5kZXgpICU+PC9zcGFuPgo=" \
  | base64 --decode >./priv/templates/tailwind.gen.html/show.html.eex

  echo "ZGVmbW9kdWxlIDwlPSBpbnNwZWN0IGNvbnRleHQud2ViX21vZHVsZSAlPi48JT0gaW5zcGVjdCBNb2R1bGUuY29uY2F0KHNjaGVtYS53ZWJfbmFtZXNwYWNlLCBzY2hlbWEuYWxpYXMpICU+VmlldyBkbwogIHVzZSA8JT0gaW5zcGVjdCBjb250ZXh0LndlYl9tb2R1bGUgJT4sIDp2aWV3CmVuZAo=" \
  | base64 --decode >./priv/templates/tailwind.gen.html/view.ex
}

hook_config_files_to_environment_variables(){
    sed -i \
      -e 's/host: "[^"]*"/host: System.get_env("DOMAIN") || "localhost"/g' \
      -e 's/secret_key_base: "[^"]*"/secret_key_base: System.get_env("SECRET_KEY_BASE") || ""/g' \
      -e 's/signing_salt: "[^"]*"/signing_salt: System.get_env("LV_SIGNING_SALT") || ""/g' \
        ./config/config.exs

    search_and_inject \
      '  http: \[port: 4000\],' \
      '\  https: [\
    port: String.to_integer(System.get_env("SSL_PORT") || "443"),\
    cipher_suite: :strong,\
    certfile: System.get_env("SSL_CERT_PATH") || "priv/cert/selfsigned.pem",\
    keyfile: System.get_env("SSL_KEY_PATH") || "priv/cert/selfsigned_key.pem"\
  ],' ./config/dev.exs

    search_and_replace \
      '  http: \[port: 4000\],' \
      's/port: 4000/port: String.to_integer(System.get_env("PORT") || "4000")/g' \
      ./config/dev.exs

    search_and_inject \
      '  url: \[host: "example.com", port: 80\],' \
      '\  force_ssl: [hsts: if(System.get_env("SSL_ONLY", "false") == "true", do: true, else: false)],\
  https: [\
    port: String.to_integer(System.get_env("SSL_PORT") || "443"),\
    cipher_suite: :strong,\
    certfile: System.get_env("SSL_CERT_PATH") || "priv/cert/selfsigned.pem",\
    keyfile: System.get_env("SSL_KEY_PATH") || "priv/cert/selfsigned_key.pem"\
  ],' ./config/prod.exs

    search_and_replace \
      '  url: \[host: "example.com", port: 80\],' \
      's/host: "example.com", port: 80/\n    host: System.get_env("DOMAIN") || "localhost",\n    port: String.to_integer(System.get_env("SSL_PORT") || System.get_env("PORT") || "4000")\n  /g' \
      ./config/prod.exs

    if [ ! "$DB_NAME" == "" ]; then
      sed -i \
        -e 's/username: "[^"]*",/username: System.get_env("DB_USER") || "postgres",/g' \
        -e 's/password: "[^"]*",/password: System.get_env("DB_PASS") || "postgres",/g' \
        -e 's/database: "[^"]*",/database: (System.get_env("DB_NAME") || "phoenix")<>"_dev",/g' \
        -e 's/hostname: "[^"]*",/hostname: System.get_env("DB_HOST") || "db",\n  port: String.to_integer(System.get_env("DB_PORT") || "5432"),/g' \
          ./config/dev.exs

      sed -i \
        -e 's/port: [0-9]*/port: (String.to_integer(System.get_env("PORT") || "5432") + 2)/g' \
        -e 's/username: "[^"]*",/username: System.get_env("DB_USER") || "postgres",/g' \
        -e 's/password: "[^"]*",/password: System.get_env("DB_PASS") || "postgres",/g' \
        -e 's/database: "[^"]*",/database: (System.get_env("DB_NAME") || "phoenix")<>"_test",/g' \
        -e 's/hostname: "[^"]*",/hostname: System.get_env("DB_HOST") || "db",\n  port: String.to_integer(System.get_env("DB_PORT") || "5432"),/g' \
          ./config/test.exs
    fi
}

inject_extra_dependencies(){
    sed -i \
      -e 's;:logger, :runtime_tools;:logger, :runtime_tools, :bamboo, :recaptcha;g' \
      -e 's;{:plug_cowboy, "~> 2.0"};{:plug_cowboy, "~> 2.0"},\
      {:timex, "~> 3.5"},\
      {:sched_ex, "~> 1.0"},\
      {:bamboo, "~> 1.6"},\
      {:scrivener, "~> 2.0"},\
      {:phx_gen_auth, "~> 0.6", only: [:dev], runtime: false},\
      {:number, "~> 1.0.3"},\
      {:recaptcha, "~> 3.0"},;g' \
        ./mix.exs
}

inject_key_value_storage_agent(){
  sed -i \
    -e 's/^      LocalhostWeb.Endpoint$/&,/' \
    -e 's;# {Localhost.Worker, arg};&\n      {KeyValueStorage, []};g' \
      ./lib/`project_application_name`/application.ex

  echo "ZGVmbW9kdWxlIEtleVZhbHVlU3RvcmFnZSBkbwogIHVzZSBBZ2VudAoKICBAZG9jICIiIgogIFN0YXJ0cyBrZXkgdmFsdWUgc3RvcmFnZS4KICAiIiIKICBkZWYgc3RhcnRfbGluayhvcHRzIFxcIFtdKSBkbwogICAgQWdlbnQuc3RhcnRfbGluayhmbiAtPiAle30gZW5kLCBbbmFtZTogX19NT0RVTEVfX10gKysgb3B0cykKICBlbmQKCiAgQGRvYyAiIiIKICBHZXRzIGEgdGltZXN0YW1wIGZyb20gc3RvcmFnZSBieSBga2V5YC4KICAiIiIKICBkZWYgZ2V0KGtleSkgZG8KICAgIEFnZW50LmdldChfX01PRFVMRV9fLCAmTWFwLmdldCgmMSwga2V5KSkKICBlbmQKCiAgQGRvYyAiIiIKICBMaXN0IGFsbCBrZXlzIGluIHN0b3JhZ2UuCiAgIiIiCiAgZGVmIGtleXMoKSBkbwogICAgQWdlbnQuZ2V0KF9fTU9EVUxFX18sICZNYXAua2V5cygmMSkpCiAgZW5kCgogIEBkb2MgIiIiCiAgUmVtb3ZlcyB0aGUgZ2l2ZW4gYGtleWAgZnJvbSBrZXkgdmFsdWUgc3RvcmFnZS4KICAiIiIKICBkZWYgZGVsZXRlKGtleSkgZG8KICAgIEFnZW50LnVwZGF0ZShfX01PRFVMRV9fLCAmTWFwLmRlbGV0ZSgmMSwga2V5KSkKICBlbmQKCiAgQGRvYyAiIiIKICBQdXRzIGEgYHZhbHVlYCAoYnkgZGVmYXVsdCBhIHRpbWVzdGFtcCkgZm9yIHRoZSBnaXZlbiBga2V5YCBpbiBzdG9yYWdlLgogICIiIgogIGRlZiBwdXQoa2V5LCB2YWx1ZSBcXCBuaWwpIGRvCiAgICBBZ2VudC51cGRhdGUoX19NT0RVTEVfXywgJk1hcC5wdXQoJjEsIGtleSwgKHZhbHVlIHx8IERhdGVUaW1lLnV0Y19ub3cpKSkKICBlbmQKCiAgQGRvYyAiIiIKICBQdXRzIGEgdGltZXN0YW1wIGZvciB0aGUgZ2l2ZW4gYGtleWAgaW4gc3RvcmFnZS4KICBUb3VjaCBhIHJlbW90ZSBrZXkgdmFsdWUgc3RvcmFnZSBpbnN0YW5jZSBmb3IgYSBnaXZlbiBga2V5YC4KICAiIiIKICBkZWYgcmVhY2gobm9kZSwga2V5KSBkbwogICAgOnJwYy5jYWxsKG5vZGUsIF9fTU9EVUxFX18sIDpwdXQsIFtrZXldLCA2MDAwKQogIGVuZAplbmQK" \
  | base64 --decode >./lib/key_value_storage.ex
}

inject_tailwind(){
    rm ./assets/css/phoenix.css \
      && mv ./assets/css/app.{s,}css \
      && sed -i -e 's~import "../css/app.scss"~import "../css/app.css"~g' ./assets/js/app.js \
      && sed -i \
      -e 's~@import "./phoenix.css";~@import "tailwindcss/base";\
@import "tailwindcss/components";\
@import "tailwindcss/utilities";~g' \
        ./assets/css/app.css

    cat <<EOF >./assets/postcss.config.js
module.exports = {
  plugins: [
    require("postcss-import"),
    require('tailwindcss')('./tailwind.config.js'),
    require('autoprefixer')
  ]
}
EOF

    cat <<EOF >./assets/tailwind.config.js
module.exports = {
  purge: [
    "../**/*.html.eex",
    "../**/*.html.leex",
    "../**/views/**/*.ex",
    "../**/live/**/*.ex",
    "./js/**/*.js",
  ],
  darkMode: false, // or 'media' or 'class'
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
};
EOF

    sed -i '/^    module: {$/,/^    },$/c \
    module: {\
      rules: [\
        {\
          test: /\.js$/,\
          exclude: /node_modules/,\
          use: {\
            loader: "babel-loader",\
          },\
        },\
        {\
          test: /\.[s]?css$/,\
          use: [MiniCssExtractPlugin.loader, "css-loader", "postcss-loader"],\
        },\
      ],\
    },' ./assets/webpack.config.js

    #sed -i 's/"webpack": "4.41.5"/"webpack": "5.16.0"/g' ./assets/package.json
    sed -i 's/"webpack-cli": "^3.3.2"/"webpack-cli": "^3.3.2",\
"tailwindcss": "2.0.2",\
"postcss": "8.2.4",\
"postcss-loader": "4.1.0",\
"postcss-import": "14.0.0",\
"autoprefixer": "10.2.3"/g' ./assets/package.json
}

generate_secrets_if_undefined(){
  if [ "$SECRET_KEY_BASE" == "" ]; then
    echo "Creating new secret..."
    mix phx.gen.secret 128 | tail -n 1 >new_secret.erase_me.txt
    export SECRET_KEY_BASE="$(cat new_secret.erase_me.txt | echo -n)"
  fi

  if [ "$LV_SIGNING_SALT" == "" ]; then
    echo "Creating new lv secret..."
    mix phx.gen.secret 32 | tail -n 1 >new_lv_secret.erase_me.txt
    export LV_SIGNING_SALT="$(cat new_lv_secret.erase_me.txt | echo -n)"
  fi
}
